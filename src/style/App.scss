.grid-container {
  display: grid;
  grid-template-rows: repeat(1, 16vw);
  grid-gap: 10px;
}

.grid-container > figure{
  /*background: lime;*/
  margin: 0;
  padding: 12px;
}

.grid_image {
  width:100%;
  height:100%;
}

.grid_item {
  position: relative;
  /*   overflow: hidden will prevent the image scaling to exceed the specified width. It will expand on back */
  overflow: hidden;
}

.card-container{
  //background: grey
}

.card-wrapper{
  background: #14c5bf36;
  padding:1rem;
}
.card {
  background: #fff;
  border-radius: 2px;
  display: inline-block;
  position: relative;
  display: flex;
  height: 70vh;
}

.card-3 {
  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
}


@mixin glitchCopy {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch{
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 1px;
  animation: glitch-skew 1s infinite linear alternate-reverse;

  &::before{

    @include glitchCopy;
    //offset the text
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }

  &::after {
    @include glitchCopy;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 1s infinite linear alternate-reverse;
  }
}

@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
      transform: skew((random(100) / 100) + deg);
    }
  }
}

@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
      transform: skew((random(100) / 100) + deg);
    }
  }
}
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}

